__author__ = 'elton.tian'
__version__ = '0.0.3'
"""
Change List:
0.0.1:  Init Version, 
0.0.2:  Add option for InLot.
0.0.3:  Adjust to support UTC.
0.0.4:  Relase thread for upload automatically when closing.
0.0.5:  if not all the item tested, set MultiErrCode to 99999 .
0.0.6:  all test items upload to mes.
"""

# !/usr/bin/env python
# pylint: disable=R0921
# pylint: disable=F0401
# Mimic Generic Interface to Factory Shop Floor Systems
import os
import sys
import importlib
import json
from enum import Enum
import pprint
import logging
import time
import threading
import suds.client
import shutil
import glob
import tkinter.simpledialog
import tkinter as tk
import datetime
import psutil

MES_IT_MAIL_NOTIFICATION = True

MES_RECV_MAIL_LIST = ['Rays.wang@gseo.com', ]
MES_CC_MAIL_LIST = ['Allen.Chiang@gseo.com', 'gladys.lin@gseo.com', ]

# MES_RECV_MAIL_LIST = ['elton.tian@myzygroup.com', ]
# MES_CC_MAIL_LIST = []

# SN FOR TEST: 2308L0208K02KW、2308L0208K02M1、2308L0208K02MR
# MAIL IP : 192.168.100.5, Port : 25

MES_CTRL_PWD = 'MES123'
MES_IN_LOT_CTRL = True  # required by Rays. 12/21/2020

SHOP_FLOOR_BAK_DIR = r'c:\shop_floor_to_be_uploaded'
SHOP_FLOOR_FAIL_TO_UPLOAD = r'c:\shop_floor_fails'
MACHINE_TYPE = 'LCD_FUNCTION_AVI'
STATION_ID = 'seacliff_paneltesting-01'
MAC_ID_FILER = '本地'
HostProgressName = 'seacliff_paneltesting_run.exe'
SHOP_FLOOR_BAK_DIR_FILTER = f'*_{STATION_ID}_*.log'
# URL should end with ?WSDL
SF_URL = 'http://192.168.100.96:8012/InLotWS/Service/P5385InLotWS.asmx?WSDL'
SF_LOADER_URL = 'http://192.168.100.96:8012/LoaderWS/Service/SummaryLoader.asmx?WSDL'
SF_MAIL_URL = 'http://192.168.100.96:8011/MailWS/GseoWS.asmx?WSDL'
MES_CHK_OFFLINE: dict


class ShopFloorError(Exception):
    pass


class ShopFloor_genius(object):
    def __init__(self, machine_type, station_id):
        self._machine_type = machine_type
        self._station_id = station_id
        self._headers = {'Content-Type': 'application/json'}
        self._time_out = 3  # timeout for web-service.
        self._max_retries = 3

        # <editor-fold desc="LOG_2_MES">
        self._mes_dic = {
            'MODEL_NAME': '',
            'UUT_SERIAL_NUMBER': 'UUT_Serial_Number',
            'STATION_ID': 'Station_ID',
            'START_TIME': 'Start_Time',
            'END_TIME': 'End_Time',
            'OVERALL_RESULT': 'Overall_Result',
            'OVERALL_ERRORCODE': '',

            'ELAPSED_SECONDS': "elapsed_seconds",
            'SW_VERSION': "SW_VERSION",
            'FW_VERSION_FIXTURE': "FW_VERSION_FIXTURE",
            'MPK_API_VERSION': "MPK_API_Version",
            'DUT_SCREENONRETRIES': "DUT_ScreenOnRetries",
            'DUT_SCREENONSTATUS': "DUT_ScreenOnStatus",
            'ENV_PARTICLECOUNTER': "ENV_ParticleCounter",
            'BLEMISH_STR_OVERALL': "BLEMISH_STR_OVERALL",
            'BLEMISH_RES_OVERALL': "BLEMISH_RES_OVERALL",
            'DISPLAY_GAMMA': "DISPLAY_GAMMA",
            'GAMMA_GL12_P1_W255': "Gamma_GL12_P1_W255",
            'GAMMA_GL25_P1_W255': "Gamma_GL25_P1_W255",
            'GAMMA_GL35_P1_W255': "Gamma_GL35_P1_W255",
            'GAMMA_GL64_P1_W255': "Gamma_GL64_P1_W255",
            'GAMMA_GL90_P1_W255': "Gamma_GL90_P1_W255",
            'GAMMA_GL127_P1_W255': "Gamma_GL127_P1_W255",
            'GAMMA_GL180_P1_W255': "Gamma_GL180_P1_W255",
            'W255_P1_CONTRAST': "W255_P1_CONTRAST",
            'W255_P1_X': "W255_P1_x",
            'W255_P1_Y': "W255_P1_y",
            'W255_P1_LV': "W255_P1_Lv",
            'R255_P1_X': "R255_P1_x",
            'R255_P1_Y': "R255_P1_y",
            'R255_P1_LV': "R255_P1_Lv",
            'G255_P1_X': "G255_P1_x",
            'G255_P1_Y': "G255_P1_y",
            'G255_P1_LV': "G255_P1_Lv",
            'B255_P1_X': "B255_P1_x",
            'B255_P1_Y': "B255_P1_y",
            'B255_P1_LV': "B255_P1_Lv",
            'W255_MAX_BRIGHTNESS_VARIATION': "W255_MAXIMUM_BRIGHTNESS_VARIATION",
            'W255_MAX_DUV_VARIATION': "W255_MAXIMUM_du'v'_VARIATION",
            'R255_MAX_DUV_VARIATION': "R255_MAXIMUM_du'v'_VARIATION",
            'G255_MAX_DUV_VARIATION': "G255_MAXIMUM_du'v'_VARIATION",
            'B255_MAX_DUV_VARIATION': "B255_MAXIMUM_du'v'_VARIATION",
            'W255_P1_NBR_MAX_DUV_VARIATION': "W255_P1_NBR_MAXIMUM_du'v'_VARIATION",
            'W255_P2_NBR_MAX_DUV_VARIATION': "W255_P2_NBR_MAXIMUM_du'v'_VARIATION",
            'W255_P3_NBR_MAX_DUV_VARIATION': "W255_P3_NBR_MAXIMUM_du'v'_VARIATION",
            'W255_P4_NBR_MAX_DUV_VARIATION': "W255_P4_NBR_MAXIMUM_du'v'_VARIATION",
            'W255_P5_NBR_MAX_DUV_VARIATION': "W255_P5_NBR_MAXIMUM_du'v'_VARIATION",
            'W255_P6_NBR_MAX_DUV_VARIATION': "W255_P6_NBR_MAXIMUM_du'v'_VARIATION",
            'W255_P7_NBR_MAX_DUV_VARIATION': "W255_P7_NBR_MAXIMUM_du'v'_VARIATION",
            'W255_P8_NBR_MAX_DUV_VARIATION': "W255_P8_NBR_MAXIMUM_du'v'_VARIATION",
            'W255_P9_NBR_MAX_DUV_VARIATION': "W255_P9_NBR_MAXIMUM_du'v'_VARIATION",
            'R255_P1_NBR_MAX_DUV_VARIATION': "R255_P1_NBR_MAXIMUM_du'v'_VARIATION",
            'R255_P2_NBR_MAX_DUV_VARIATION': "R255_P2_NBR_MAXIMUM_du'v'_VARIATION",
            'R255_P3_NBR_MAX_DUV_VARIATION': "R255_P3_NBR_MAXIMUM_du'v'_VARIATION",
            'R255_P4_NBR_MAX_DUV_VARIATION': "R255_P4_NBR_MAXIMUM_du'v'_VARIATION",
            'R255_P5_NBR_MAX_DUV_VARIATION': "R255_P5_NBR_MAXIMUM_du'v'_VARIATION",
            'R255_P6_NBR_MAX_DUV_VARIATION': "R255_P6_NBR_MAXIMUM_du'v'_VARIATION",
            'R255_P7_NBR_MAX_DUV_VARIATION': "R255_P7_NBR_MAXIMUM_du'v'_VARIATION",
            'R255_P8_NBR_MAX_DUV_VARIATION': "R255_P8_NBR_MAXIMUM_du'v'_VARIATION",
            'R255_P9_NBR_MAX_DUV_VARIATION': "R255_P9_NBR_MAXIMUM_du'v'_VARIATION",
            'G255_P1_NBR_MAX_DUV_VARIATION': "G255_P1_NBR_MAXIMUM_du'v'_VARIATION",
            'G255_P2_NBR_MAX_DUV_VARIATION': "G255_P2_NBR_MAXIMUM_du'v'_VARIATION",
            'G255_P3_NBR_MAX_DUV_VARIATION': "G255_P3_NBR_MAXIMUM_du'v'_VARIATION",
            'G255_P4_NBR_MAX_DUV_VARIATION': "G255_P4_NBR_MAXIMUM_du'v'_VARIATION",
            'G255_P5_NBR_MAX_DUV_VARIATION': "G255_P5_NBR_MAXIMUM_du'v'_VARIATION",
            'G255_P6_NBR_MAX_DUV_VARIATION': "G255_P6_NBR_MAXIMUM_du'v'_VARIATION",
            'G255_P7_NBR_MAX_DUV_VARIATION': "G255_P7_NBR_MAXIMUM_du'v'_VARIATION",
            'G255_P8_NBR_MAX_DUV_VARIATION': "G255_P8_NBR_MAXIMUM_du'v'_VARIATION",
            'G255_P9_NBR_MAX_DUV_VARIATION': "G255_P9_NBR_MAXIMUM_du'v'_VARIATION",
            'B255_P1_NBR_MAX_DUV_VARIATION': "B255_P1_NBR_MAXIMUM_du'v'_VARIATION",
            'B255_P2_NBR_MAX_DUV_VARIATION': "B255_P2_NBR_MAXIMUM_du'v'_VARIATION",
            'B255_P3_NBR_MAX_DUV_VARIATION': "B255_P3_NBR_MAXIMUM_du'v'_VARIATION",
            'B255_P4_NBR_MAX_DUV_VARIATION': "B255_P4_NBR_MAXIMUM_du'v'_VARIATION",
            'B255_P5_NBR_MAX_DUV_VARIATION': "B255_P5_NBR_MAXIMUM_du'v'_VARIATION",
            'B255_P6_NBR_MAX_DUV_VARIATION': "B255_P6_NBR_MAXIMUM_du'v'_VARIATION",
            'B255_P7_NBR_MAX_DUV_VARIATION': "B255_P7_NBR_MAXIMUM_du'v'_VARIATION",
            'B255_P8_NBR_MAX_DUV_VARIATION': "B255_P8_NBR_MAXIMUM_du'v'_VARIATION",
            'B255_P9_NBR_MAX_DUV_VARIATION': "B255_P9_NBR_MAXIMUM_du'v'_VARIATION",
            'GL180_P1_WRT_W255_DUV': "GL180_P1_WRT_W255_du'v'",
            'GL127_P1_WRT_W255_DUV': "GL127_P1_WRT_W255_du'v'",
            'GL90_P1_WRT_W255_DUV': "GL90_P1_WRT_W255_du'v'",
            'GL64_P1_WRT_W255_DUV': "GL64_P1_WRT_W255_du'v'",
            'GL35_P1_WRT_W255_DUV': "GL35_P1_WRT_W255_du'v'",
            'GL25_P1_WRT_W255_DUV': "GL25_P1_WRT_W255_du'v'",
            'GL12_P1_WRT_W255_DUV': "GL12_P1_WRT_W255_du'v'",
            'FM_DARK_THRESHOLD_GRADE1': "FM_DARK_THRESHOLD_GRADE1",
            'FM_DARK_THRESHOLD_GRADE2': "FM_DARK_THRESHOLD_GRADE2",
            'FM_SLIGHTER_THRESHOLD_GRADE1': "FM_SLIGHTER_THRESHOLD_GRADE1",
            'FM_SLIGHTER_THRESHOLD_GRADE2': "FM_SLIGHTER_THRESHOLD_GRADE2",
            'FM_SLIGHTER_THRESHOLD_GRADE3': "FM_SLIGHTER_THRESHOLD_GRADE3",
            'W255_FM_DARKER_G1_A_QTY_L': "W255_FM_DARKER_GRADE1_A_QTY_L",
            'W255_FM_DARKER_G2_A_QTY_L': "W255_FM_DARKER_GRADE2_A_QTY_L",
            'W255_FM_DARKER_G1_A_MIN_DIST_L': "W255_FM_DARKER_GRADE1_A_MIN_DISTANCE_L",
            'W255_FM_DARKER_G2_A_MIN_DIST_L': "W255_FM_DARKER_GRADE2_A_MIN_DISTANCE_L",
            'W255_FM_SLI_G1_A_QTY_L': "W255_FM_SLIGHTER_GRADE1_A_QTY_L",
            'W255_FM_SLI_G2_A_QTY_L': "W255_FM_SLIGHTER_GRADE2_A_QTY_L",
            'W255_FM_SLI_G3_A_QTY_L': "W255_FM_SLIGHTER_GRADE3_A_QTY_L",
            'W255_FM_SLI_G1_A_MIN_DIST_L': "W255_FM_SLIGHTER_GRADE1_A_MIN_DISTANCE_L",
            'W255_FM_SLI_G2_A_MIN_DIST_L': "W255_FM_SLIGHTER_GRADE2_A_MIN_DISTANCE_L",
            'W255_FM_SLI_G3_A_MIN_DIST_L': "W255_FM_SLIGHTER_GRADE3_A_MIN_DISTANCE_L",
            'W255_FM_DARKER_G1_B_QTY_L': "W255_FM_DARKER_GRADE1_B_QTY_L",
            'W255_FM_DARKER_G2_B_QTY_L': "W255_FM_DARKER_GRADE2_B_QTY_L",
            'W255_FM_DARKER_G1_B_MIN_DIST_L': "W255_FM_DARKER_GRADE1_B_MIN_DISTANCE_L",
            'W255_FM_DARKER_G2_B_MIN_DIST_L': "W255_FM_DARKER_GRADE2_B_MIN_DISTANCE_L",
            'W255_FM_SLI_G1_B_QTY_L': "W255_FM_SLIGHTER_GRADE1_B_QTY_L",
            'W255_FM_SLI_G2_B_QTY_L': "W255_FM_SLIGHTER_GRADE2_B_QTY_L",
            'W255_FM_SLI_G3_B_QTY_L': "W255_FM_SLIGHTER_GRADE3_B_QTY_L",
            'W255_FM_SLI_G1_B_MIN_DIST_L': "W255_FM_SLIGHTER_GRADE1_B_MIN_DISTANCE_L",
            'W255_FM_SLI_G2_B_MIN_DIST_L': "W255_FM_SLIGHTER_GRADE2_B_MIN_DISTANCE_L",
            'W255_FM_SLI_G3_B_MIN_DIST_L': "W255_FM_SLIGHTER_GRADE3_B_MIN_DISTANCE_L",
            'W255_FM_DARKER_G1_C_QTY_L': "W255_FM_DARKER_GRADE1_C_QTY_L",
            'W255_FM_DARKER_G2_C_QTY_L': "W255_FM_DARKER_GRADE2_C_QTY_L",
            'W255_FM_DARKER_G1_C_MIN_DIST_L': "W255_FM_DARKER_GRADE1_C_MIN_DISTANCE_L",
            'W255_FM_DARKER_G2_C_MIN_DIST_L': "W255_FM_DARKER_GRADE2_C_MIN_DISTANCE_L",
            'W255_FM_SLI_G1_C_QTY_L': "W255_FM_SLIGHTER_GRADE1_C_QTY_L",
            'W255_FM_SLI_G2_C_QTY_L': "W255_FM_SLIGHTER_GRADE2_C_QTY_L",
            'W255_FM_SLI_G3_C_QTY_L': "W255_FM_SLIGHTER_GRADE3_C_QTY_L",
            'W255_FM_SLI_G1_C_MIN_DIST_L': "W255_FM_SLIGHTER_GRADE1_C_MIN_DISTANCE_L",
            'W255_FM_SLI_G2_C_MIN_DIST_L': "W255_FM_SLIGHTER_GRADE2_C_MIN_DISTANCE_L",
            'W255_FM_SLI_G3_C_MIN_DIST_L': "W255_FM_SLIGHTER_GRADE3_C_MIN_DISTANCE_L",
            'W255_FM_DARKER_GRADE1_L': "W255_FM_DARKER_GRADE1_L",
            'W255_FM_DARKER_GRADE2_L': "W255_FM_DARKER_GRADE2_L",
            'W255_FM_SLIGHTER_GRADE1_L': "W255_FM_SLIGHTER_GRADE1_L",
            'W255_FM_SLIGHTER_GRADE2_L': "W255_FM_SLIGHTER_GRADE2_L",
            'W255_FM_SLIGHTER_GRADE3_L': "W255_FM_SLIGHTER_GRADE3_L",
            'R255_FM_DARKER_G1_A_QTY_L': "R255_FM_DARKER_GRADE1_A_QTY_L",
            'R255_FM_DARKER_G2_A_QTY_L': "R255_FM_DARKER_GRADE2_A_QTY_L",
            'R255_FM_DARKER_G1_A_MIN_DIST_L': "R255_FM_DARKER_GRADE1_A_MIN_DISTANCE_L",
            'R255_FM_DARKER_G2_A_MIN_DIST_L': "R255_FM_DARKER_GRADE2_A_MIN_DISTANCE_L",
            'R255_FM_SLI_G1_A_QTY_L': "R255_FM_SLIGHTER_GRADE1_A_QTY_L",
            'R255_FM_SLI_G2_A_QTY_L': "R255_FM_SLIGHTER_GRADE2_A_QTY_L",
            'R255_FM_SLI_G3_A_QTY_L': "R255_FM_SLIGHTER_GRADE3_A_QTY_L",
            'R255_FM_SLI_G1_A_MIN_DIST_L': "R255_FM_SLIGHTER_GRADE1_A_MIN_DISTANCE_L",
            'R255_FM_SLI_G2_A_MIN_DIST_L': "R255_FM_SLIGHTER_GRADE2_A_MIN_DISTANCE_L",
            'R255_FM_SLI_G3_A_MIN_DIST_L': "R255_FM_SLIGHTER_GRADE3_A_MIN_DISTANCE_L",
            'R255_FM_DARKER_G1_B_QTY_L': "R255_FM_DARKER_GRADE1_B_QTY_L",
            'R255_FM_DARKER_G2_B_QTY_L': "R255_FM_DARKER_GRADE2_B_QTY_L",
            'R255_FM_DARKER_G1_B_MIN_DIST_L': "R255_FM_DARKER_GRADE1_B_MIN_DISTANCE_L",
            'R255_FM_DARKER_G2_B_MIN_DIST_L': "R255_FM_DARKER_GRADE2_B_MIN_DISTANCE_L",
            'R255_FM_SLI_G1_B_QTY_L': "R255_FM_SLIGHTER_GRADE1_B_QTY_L",
            'R255_FM_SLI_G2_B_QTY_L': "R255_FM_SLIGHTER_GRADE2_B_QTY_L",
            'R255_FM_SLI_G3_B_QTY_L': "R255_FM_SLIGHTER_GRADE3_B_QTY_L",
            'R255_FM_SLI_G1_B_MIN_DIST_L': "R255_FM_SLIGHTER_GRADE1_B_MIN_DISTANCE_L",
            'R255_FM_SLI_G2_B_MIN_DIST_L': "R255_FM_SLIGHTER_GRADE2_B_MIN_DISTANCE_L",
            'R255_FM_SLI_G3_B_MIN_DIST_L': "R255_FM_SLIGHTER_GRADE3_B_MIN_DISTANCE_L",
            'R255_FM_DARKER_G1_C_QTY_L': "R255_FM_DARKER_GRADE1_C_QTY_L",
            'R255_FM_DARKER_G2_C_QTY_L': "R255_FM_DARKER_GRADE2_C_QTY_L",
            'R255_FM_DARKER_G1_C_MIN_DIST_L': "R255_FM_DARKER_GRADE1_C_MIN_DISTANCE_L",
            'R255_FM_DARKER_G2_C_MIN_DIST_L': "R255_FM_DARKER_GRADE2_C_MIN_DISTANCE_L",
            'R255_FM_SLI_G1_C_QTY_L': "R255_FM_SLIGHTER_GRADE1_C_QTY_L",
            'R255_FM_SLI_G2_C_QTY_L': "R255_FM_SLIGHTER_GRADE2_C_QTY_L",
            'R255_FM_SLI_G3_C_QTY_L': "R255_FM_SLIGHTER_GRADE3_C_QTY_L",
            'R255_FM_SLI_G1_C_MIN_DIST_L': "R255_FM_SLIGHTER_GRADE1_C_MIN_DISTANCE_L",
            'R255_FM_SLI_G2_C_MIN_DIST_L': "R255_FM_SLIGHTER_GRADE2_C_MIN_DISTANCE_L",
            'R255_FM_SLI_G3_C_MIN_DIST_L': "R255_FM_SLIGHTER_GRADE3_C_MIN_DISTANCE_L",
            'R255_FM_DARKER_GRADE1_L': "R255_FM_DARKER_GRADE1_L",
            'R255_FM_DARKER_GRADE2_L': "R255_FM_DARKER_GRADE2_L",
            'R255_FM_SLIGHTER_GRADE1_L': "R255_FM_SLIGHTER_GRADE1_L",
            'R255_FM_SLIGHTER_GRADE2_L': "R255_FM_SLIGHTER_GRADE2_L",
            'R255_FM_SLIGHTER_GRADE3_L': "R255_FM_SLIGHTER_GRADE3_L",
            'G255_FM_DARKER_G1_A_QTY_L': "G255_FM_DARKER_GRADE1_A_QTY_L",
            'G255_FM_DARKER_G2_A_QTY_L': "G255_FM_DARKER_GRADE2_A_QTY_L",
            'G255_FM_DARKER_G1_A_MIN_DIST_L': "G255_FM_DARKER_GRADE1_A_MIN_DISTANCE_L",
            'G255_FM_DARKER_G2_A_MIN_DIST_L': "G255_FM_DARKER_GRADE2_A_MIN_DISTANCE_L",
            'G255_FM_SLI_G1_A_QTY_L': "G255_FM_SLIGHTER_GRADE1_A_QTY_L",
            'G255_FM_SLI_G2_A_QTY_L': "G255_FM_SLIGHTER_GRADE2_A_QTY_L",
            'G255_FM_SLI_G3_A_QTY_L': "G255_FM_SLIGHTER_GRADE3_A_QTY_L",
            'G255_FM_SLI_G1_A_MIN_DIST_L': "G255_FM_SLIGHTER_GRADE1_A_MIN_DISTANCE_L",
            'G255_FM_SLI_G2_A_MIN_DIST_L': "G255_FM_SLIGHTER_GRADE2_A_MIN_DISTANCE_L",
            'G255_FM_SLI_G3_A_MIN_DIST_L': "G255_FM_SLIGHTER_GRADE3_A_MIN_DISTANCE_L",
            'G255_FM_DARKER_G1_B_QTY_L': "G255_FM_DARKER_GRADE1_B_QTY_L",
            'G255_FM_DARKER_G2_B_QTY_L': "G255_FM_DARKER_GRADE2_B_QTY_L",
            'G255_FM_DARKER_G1_B_MIN_DIST_L': "G255_FM_DARKER_GRADE1_B_MIN_DISTANCE_L",
            'G255_FM_DARKER_G2_B_MIN_DIST_L': "G255_FM_DARKER_GRADE2_B_MIN_DISTANCE_L",
            'G255_FM_SLI_G1_B_QTY_L': "G255_FM_SLIGHTER_GRADE1_B_QTY_L",
            'G255_FM_SLI_G2_B_QTY_L': "G255_FM_SLIGHTER_GRADE2_B_QTY_L",
            'G255_FM_SLI_G3_B_QTY_L': "G255_FM_SLIGHTER_GRADE3_B_QTY_L",
            'G255_FM_SLI_G1_B_MIN_DIST_L': "G255_FM_SLIGHTER_GRADE1_B_MIN_DISTANCE_L",
            'G255_FM_SLI_G2_B_MIN_DIST_L': "G255_FM_SLIGHTER_GRADE2_B_MIN_DISTANCE_L",
            'G255_FM_SLI_G3_B_MIN_DIST_L': "G255_FM_SLIGHTER_GRADE3_B_MIN_DISTANCE_L",
            'G255_FM_DARKER_G1_C_QTY_L': "G255_FM_DARKER_GRADE1_C_QTY_L",
            'G255_FM_DARKER_G2_C_QTY_L': "G255_FM_DARKER_GRADE2_C_QTY_L",
            'G255_FM_DARKER_G1_C_MIN_DIST_L': "G255_FM_DARKER_GRADE1_C_MIN_DISTANCE_L",
            'G255_FM_DARKER_G2_C_MIN_DIST_L': "G255_FM_DARKER_GRADE2_C_MIN_DISTANCE_L",
            'G255_FM_SLI_G1_C_QTY_L': "G255_FM_SLIGHTER_GRADE1_C_QTY_L",
            'G255_FM_SLI_G2_C_QTY_L': "G255_FM_SLIGHTER_GRADE2_C_QTY_L",
            'G255_FM_SLI_G3_C_QTY_L': "G255_FM_SLIGHTER_GRADE3_C_QTY_L",
            'G255_FM_SLI_G1_C_MIN_DIST_L': "G255_FM_SLIGHTER_GRADE1_C_MIN_DISTANCE_L",
            'G255_FM_SLI_G2_C_MIN_DIST_L': "G255_FM_SLIGHTER_GRADE2_C_MIN_DISTANCE_L",
            'G255_FM_SLI_G3_C_MIN_DIST_L': "G255_FM_SLIGHTER_GRADE3_C_MIN_DISTANCE_L",
            'G255_FM_DARKER_GRADE1_L': "G255_FM_DARKER_GRADE1_L",
            'G255_FM_DARKER_GRADE2_L': "G255_FM_DARKER_GRADE2_L",
            'G255_FM_SLIGHTER_GRADE1_L': "G255_FM_SLIGHTER_GRADE1_L",
            'G255_FM_SLIGHTER_GRADE2_L': "G255_FM_SLIGHTER_GRADE2_L",
            'G255_FM_SLIGHTER_GRADE3_L': "G255_FM_SLIGHTER_GRADE3_L",
            'B255_FM_DARKER_G1_A_QTY_L': "B255_FM_DARKER_GRADE1_A_QTY_L",
            'B255_FM_DARKER_G2_A_QTY_L': "B255_FM_DARKER_GRADE2_A_QTY_L",
            'B255_FM_DARKER_G1_A_MIN_DIST_L': "B255_FM_DARKER_GRADE1_A_MIN_DISTANCE_L",
            'B255_FM_DARKER_G2_A_MIN_DIST_L': "B255_FM_DARKER_GRADE2_A_MIN_DISTANCE_L",
            'B255_FM_SLI_G1_A_QTY_L': "B255_FM_SLIGHTER_GRADE1_A_QTY_L",
            'B255_FM_SLI_G2_A_QTY_L': "B255_FM_SLIGHTER_GRADE2_A_QTY_L",
            'B255_FM_SLI_G3_A_QTY_L': "B255_FM_SLIGHTER_GRADE3_A_QTY_L",
            'B255_FM_SLI_G1_A_MIN_DIST_L': "B255_FM_SLIGHTER_GRADE1_A_MIN_DISTANCE_L",
            'B255_FM_SLI_G2_A_MIN_DIST_L': "B255_FM_SLIGHTER_GRADE2_A_MIN_DISTANCE_L",
            'B255_FM_SLI_G3_A_MIN_DIST_L': "B255_FM_SLIGHTER_GRADE3_A_MIN_DISTANCE_L",
            'B255_FM_DARKER_G1_B_QTY_L': "B255_FM_DARKER_GRADE1_B_QTY_L",
            'B255_FM_DARKER_G2_B_QTY_L': "B255_FM_DARKER_GRADE2_B_QTY_L",
            'B255_FM_DARKER_G1_B_MIN_DIST_L': "B255_FM_DARKER_GRADE1_B_MIN_DISTANCE_L",
            'B255_FM_DARKER_G2_B_MIN_DIST_L': "B255_FM_DARKER_GRADE2_B_MIN_DISTANCE_L",
            'B255_FM_SLI_G1_B_QTY_L': "B255_FM_SLIGHTER_GRADE1_B_QTY_L",
            'B255_FM_SLI_G2_B_QTY_L': "B255_FM_SLIGHTER_GRADE2_B_QTY_L",
            'B255_FM_SLI_G3_B_QTY_L': "B255_FM_SLIGHTER_GRADE3_B_QTY_L",
            'B255_FM_SLI_G1_B_MIN_DIST_L': "B255_FM_SLIGHTER_GRADE1_B_MIN_DISTANCE_L",
            'B255_FM_SLI_G2_B_MIN_DIST_L': "B255_FM_SLIGHTER_GRADE2_B_MIN_DISTANCE_L",
            'B255_FM_SLI_G3_B_MIN_DIST_L': "B255_FM_SLIGHTER_GRADE3_B_MIN_DISTANCE_L",
            'B255_FM_DARKER_G1_C_QTY_L': "B255_FM_DARKER_GRADE1_C_QTY_L",
            'B255_FM_DARKER_G2_C_QTY_L': "B255_FM_DARKER_GRADE2_C_QTY_L",
            'B255_FM_DARKER_G1_C_MIN_DIST_L': "B255_FM_DARKER_GRADE1_C_MIN_DISTANCE_L",
            'B255_FM_DARKER_G2_C_MIN_DIST_L': "B255_FM_DARKER_GRADE2_C_MIN_DISTANCE_L",
            'B255_FM_SLI_G1_C_QTY_L': "B255_FM_SLIGHTER_GRADE1_C_QTY_L",
            'B255_FM_SLI_G2_C_QTY_L': "B255_FM_SLIGHTER_GRADE2_C_QTY_L",
            'B255_FM_SLI_G3_C_QTY_L': "B255_FM_SLIGHTER_GRADE3_C_QTY_L",
            'B255_FM_SLI_G1_C_MIN_DIST_L': "B255_FM_SLIGHTER_GRADE1_C_MIN_DISTANCE_L",
            'B255_FM_SLI_G2_C_MIN_DIST_L': "B255_FM_SLIGHTER_GRADE2_C_MIN_DISTANCE_L",
            'B255_FM_SLI_G3_C_MIN_DIST_L': "B255_FM_SLIGHTER_GRADE3_C_MIN_DISTANCE_L",
            'B255_FM_DARKER_GRADE1_L': "B255_FM_DARKER_GRADE1_L",
            'B255_FM_DARKER_GRADE2_L': "B255_FM_DARKER_GRADE2_L",
            'B255_FM_SLIGHTER_GRADE1_L': "B255_FM_SLIGHTER_GRADE1_L",
            'B255_FM_SLIGHTER_GRADE2_L': "B255_FM_SLIGHTER_GRADE2_L",
            'B255_FM_SLIGHTER_GRADE3_L': "B255_FM_SLIGHTER_GRADE3_L",
            'W000_BRIGHT_G1_A_QTY_L': "W000_BRIGHT_GRADE1_A_QTY_L",
            'W000_BRIGHT_G2_A_QTY_L': "W000_BRIGHT_GRADE2_A_QTY_L",
            'W000_BRIGHT_G3_A_QTY_L': "W000_BRIGHT_GRADE3_A_QTY_L",
            'W000_BRIGHT_G4_A_QTY_L': "W000_BRIGHT_GRADE4_A_QTY_L",
            'W000_BRIGHT_G1_A_MIN_DIST_L': "W000_BRIGHT_GRADE1_A_MIN_DISTANCE_L",
            'W000_BRIGHT_G2_A_MIN_DIST_L': "W000_BRIGHT_GRADE2_A_MIN_DISTANCE_L",
            'W000_BRIGHT_G3_A_MIN_DIST_L': "W000_BRIGHT_GRADE3_A_MIN_DISTANCE_L",
            'W000_BRIGHT_G4_A_MIN_DIST_L': "W000_BRIGHT_GRADE4_A_MIN_DISTANCE_L",
            'W000_BRIGHT_G1_B_QTY_L': "W000_BRIGHT_GRADE1_B_QTY_L",
            'W000_BRIGHT_G2_B_QTY_L': "W000_BRIGHT_GRADE2_B_QTY_L",
            'W000_BRIGHT_G3_B_QTY_L': "W000_BRIGHT_GRADE3_B_QTY_L",
            'W000_BRIGHT_G4_B_QTY_L': "W000_BRIGHT_GRADE4_B_QTY_L",
            'W000_BRIGHT_G1_B_MIN_DIST_L': "W000_BRIGHT_GRADE1_B_MIN_DISTANCE_L",
            'W000_BRIGHT_G2_B_MIN_DIST_L': "W000_BRIGHT_GRADE2_B_MIN_DISTANCE_L",
            'W000_BRIGHT_G3_B_MIN_DIST_L': "W000_BRIGHT_GRADE3_B_MIN_DISTANCE_L",
            'W000_BRIGHT_G4_B_MIN_DIST_L': "W000_BRIGHT_GRADE4_B_MIN_DISTANCE_L",
            'W000_BRIGHT_G1_C_QTY_L': "W000_BRIGHT_GRADE1_C_QTY_L",
            'W000_BRIGHT_G2_C_QTY_L': "W000_BRIGHT_GRADE2_C_QTY_L",
            'W000_BRIGHT_G3_C_QTY_L': "W000_BRIGHT_GRADE3_C_QTY_L",
            'W000_BRIGHT_G4_C_QTY_L': "W000_BRIGHT_GRADE4_C_QTY_L",
            'W000_BRIGHT_G1_C_MIN_DIST_L': "W000_BRIGHT_GRADE1_C_MIN_DISTANCE_L",
            'W000_BRIGHT_G2_C_MIN_DIST_L': "W000_BRIGHT_GRADE2_C_MIN_DISTANCE_L",
            'W000_BRIGHT_G3_C_MIN_DIST_L': "W000_BRIGHT_GRADE3_C_MIN_DISTANCE_L",
            'W000_BRIGHT_G4_C_MIN_DIST_L': "W000_BRIGHT_GRADE4_C_MIN_DISTANCE_L",
            'W000_BRIGHT_GRADE1_L': "W000_BRIGHT_GRADE1_L",
            'W000_BRIGHT_GRADE2_L': "W000_BRIGHT_GRADE2_L",
            'W000_BRIGHT_GRADE3_L': "W000_BRIGHT_GRADE3_L",
            'W000_BRIGHT_GRADE4_L': "W000_BRIGHT_GRADE4_L",
            'W255_BRIGHT_A_QTY_L': "W255_BRIGHT_A_QTY_L",
            'W255_BRIGHT_A_MIN_DISTANCE_L': "W255_BRIGHT_A_MIN_DISTANCE_L",
            'W255_BRIGHT_B_QTY_L': "W255_BRIGHT_B_QTY_L",
            'W255_BRIGHT_B_MIN_DISTANCE_L': "W255_BRIGHT_B_MIN_DISTANCE_L",
            'W255_BRIGHT_C_QTY_L': "W255_BRIGHT_C_QTY_L",
            'W255_BRIGHT_C_MIN_DISTANCE_L': "W255_BRIGHT_C_MIN_DISTANCE_L",
            'W255_BRIGHT_L': "W255_BRIGHT_L",
            'R255_BRIGHT_A_QTY_L': "R255_BRIGHT_A_QTY_L",
            'R255_BRIGHT_A_MIN_DISTANCE_L': "R255_BRIGHT_A_MIN_DISTANCE_L",
            'R255_BRIGHT_B_QTY_L': "R255_BRIGHT_B_QTY_L",
            'R255_BRIGHT_B_MIN_DISTANCE_L': "R255_BRIGHT_B_MIN_DISTANCE_L",
            'R255_BRIGHT_C_QTY_L': "R255_BRIGHT_C_QTY_L",
            'R255_BRIGHT_C_MIN_DISTANCE_L': "R255_BRIGHT_C_MIN_DISTANCE_L",
            'R255_BRIGHT_L': "R255_BRIGHT_L",
            'G255_BRIGHT_A_QTY_L': "G255_BRIGHT_A_QTY_L",
            'G255_BRIGHT_A_MIN_DISTANCE_L': "G255_BRIGHT_A_MIN_DISTANCE_L",
            'G255_BRIGHT_B_QTY_L': "G255_BRIGHT_B_QTY_L",
            'G255_BRIGHT_B_MIN_DISTANCE_L': "G255_BRIGHT_B_MIN_DISTANCE_L",
            'G255_BRIGHT_C_QTY_L': "G255_BRIGHT_C_QTY_L",
            'G255_BRIGHT_C_MIN_DISTANCE_L': "G255_BRIGHT_C_MIN_DISTANCE_L",
            'G255_BRIGHT_L': "G255_BRIGHT_L",
            'B255_BRIGHT_A_QTY_L': "B255_BRIGHT_A_QTY_L",
            'B255_BRIGHT_A_MIN_DISTANCE_L': "B255_BRIGHT_A_MIN_DISTANCE_L",
            'B255_BRIGHT_B_QTY_L': "B255_BRIGHT_B_QTY_L",
            'B255_BRIGHT_B_MIN_DISTANCE_L': "B255_BRIGHT_B_MIN_DISTANCE_L",
            'B255_BRIGHT_C_QTY_L': "B255_BRIGHT_C_QTY_L",
            'B255_BRIGHT_C_MIN_DISTANCE_L': "B255_BRIGHT_C_MIN_DISTANCE_L",
            'B255_BRIGHT_L': "B255_BRIGHT_L",
            'BLEMISH_RES_L': "BLEMISH_RES_L",
            'W255_FM_DARKER_G1_A_QTY_R': "W255_FM_DARKER_GRADE1_A_QTY_R",
            'W255_FM_DARKER_G2_A_QTY_R': "W255_FM_DARKER_GRADE2_A_QTY_R",
            'W255_FM_DARKER_G1_A_MIN_DIST_R': "W255_FM_DARKER_GRADE1_A_MIN_DISTANCE_R",
            'W255_FM_DARKER_G2_A_MIN_DIST_R': "W255_FM_DARKER_GRADE2_A_MIN_DISTANCE_R",
            'W255_FM_SLI_G1_A_QTY_R': "W255_FM_SLIGHTER_GRADE1_A_QTY_R",
            'W255_FM_SLI_G2_A_QTY_R': "W255_FM_SLIGHTER_GRADE2_A_QTY_R",
            'W255_FM_SLI_G3_A_QTY_R': "W255_FM_SLIGHTER_GRADE3_A_QTY_R",
            'W255_FM_SLI_G1_A_MIN_DIST_R': "W255_FM_SLIGHTER_GRADE1_A_MIN_DISTANCE_R",
            'W255_FM_SLI_G2_A_MIN_DIST_R': "W255_FM_SLIGHTER_GRADE2_A_MIN_DISTANCE_R",
            'W255_FM_SLI_G3_A_MIN_DIST_R': "W255_FM_SLIGHTER_GRADE3_A_MIN_DISTANCE_R",
            'W255_FM_DARKER_G1_B_QTY_R': "W255_FM_DARKER_GRADE1_B_QTY_R",
            'W255_FM_DARKER_G2_B_QTY_R': "W255_FM_DARKER_GRADE2_B_QTY_R",
            'W255_FM_DARKER_G1_B_MIN_DIST_R': "W255_FM_DARKER_GRADE1_B_MIN_DISTANCE_R",
            'W255_FM_DARKER_G2_B_MIN_DIST_R': "W255_FM_DARKER_GRADE2_B_MIN_DISTANCE_R",
            'W255_FM_SLI_G1_B_QTY_R': "W255_FM_SLIGHTER_GRADE1_B_QTY_R",
            'W255_FM_SLI_G2_B_QTY_R': "W255_FM_SLIGHTER_GRADE2_B_QTY_R",
            'W255_FM_SLI_G3_B_QTY_R': "W255_FM_SLIGHTER_GRADE3_B_QTY_R",
            'W255_FM_SLI_G1_B_MIN_DIST_R': "W255_FM_SLIGHTER_GRADE1_B_MIN_DISTANCE_R",
            'W255_FM_SLI_G2_B_MIN_DIST_R': "W255_FM_SLIGHTER_GRADE2_B_MIN_DISTANCE_R",
            'W255_FM_SLI_G3_B_MIN_DIST_R': "W255_FM_SLIGHTER_GRADE3_B_MIN_DISTANCE_R",
            'W255_FM_DARKER_G1_C_QTY_R': "W255_FM_DARKER_GRADE1_C_QTY_R",
            'W255_FM_DARKER_G2_C_QTY_R': "W255_FM_DARKER_GRADE2_C_QTY_R",
            'W255_FM_DARKER_G1_C_MIN_DIST_R': "W255_FM_DARKER_GRADE1_C_MIN_DISTANCE_R",
            'W255_FM_DARKER_G2_C_MIN_DIST_R': "W255_FM_DARKER_GRADE2_C_MIN_DISTANCE_R",
            'W255_FM_SLI_G1_C_QTY_R': "W255_FM_SLIGHTER_GRADE1_C_QTY_R",
            'W255_FM_SLI_G2_C_QTY_R': "W255_FM_SLIGHTER_GRADE2_C_QTY_R",
            'W255_FM_SLI_G3_C_QTY_R': "W255_FM_SLIGHTER_GRADE3_C_QTY_R",
            'W255_FM_SLI_G1_C_MIN_DIST_R': "W255_FM_SLIGHTER_GRADE1_C_MIN_DISTANCE_R",
            'W255_FM_SLI_G2_C_MIN_DIST_R': "W255_FM_SLIGHTER_GRADE2_C_MIN_DISTANCE_R",
            'W255_FM_SLI_G3_C_MIN_DIST_R': "W255_FM_SLIGHTER_GRADE3_C_MIN_DISTANCE_R",
            'W255_FM_DARKER_GRADE1_R': "W255_FM_DARKER_GRADE1_R",
            'W255_FM_DARKER_GRADE2_R': "W255_FM_DARKER_GRADE2_R",
            'W255_FM_SLIGHTER_GRADE1_R': "W255_FM_SLIGHTER_GRADE1_R",
            'W255_FM_SLIGHTER_GRADE2_R': "W255_FM_SLIGHTER_GRADE2_R",
            'W255_FM_SLIGHTER_GRADE3_R': "W255_FM_SLIGHTER_GRADE3_R",
            'R255_FM_DARKER_G1_A_QTY_R': "R255_FM_DARKER_GRADE1_A_QTY_R",
            'R255_FM_DARKER_G2_A_QTY_R': "R255_FM_DARKER_GRADE2_A_QTY_R",
            'R255_FM_DARKER_G1_A_MIN_DIST_R': "R255_FM_DARKER_GRADE1_A_MIN_DISTANCE_R",
            'R255_FM_DARKER_G2_A_MIN_DIST_R': "R255_FM_DARKER_GRADE2_A_MIN_DISTANCE_R",
            'R255_FM_SLI_G1_A_QTY_R': "R255_FM_SLIGHTER_GRADE1_A_QTY_R",
            'R255_FM_SLI_G2_A_QTY_R': "R255_FM_SLIGHTER_GRADE2_A_QTY_R",
            'R255_FM_SLI_G3_A_QTY_R': "R255_FM_SLIGHTER_GRADE3_A_QTY_R",
            'R255_FM_SLI_G1_A_MIN_DIST_R': "R255_FM_SLIGHTER_GRADE1_A_MIN_DISTANCE_R",
            'R255_FM_SLI_G2_A_MIN_DIST_R': "R255_FM_SLIGHTER_GRADE2_A_MIN_DISTANCE_R",
            'R255_FM_SLI_G3_A_MIN_DIST_R': "R255_FM_SLIGHTER_GRADE3_A_MIN_DISTANCE_R",
            'R255_FM_DARKER_G1_B_QTY_R': "R255_FM_DARKER_GRADE1_B_QTY_R",
            'R255_FM_DARKER_G2_B_QTY_R': "R255_FM_DARKER_GRADE2_B_QTY_R",
            'R255_FM_DARKER_G1_B_MIN_DIST_R': "R255_FM_DARKER_GRADE1_B_MIN_DISTANCE_R",
            'R255_FM_DARKER_G2_B_MIN_DIST_R': "R255_FM_DARKER_GRADE2_B_MIN_DISTANCE_R",
            'R255_FM_SLI_G1_B_QTY_R': "R255_FM_SLIGHTER_GRADE1_B_QTY_R",
            'R255_FM_SLI_G2_B_QTY_R': "R255_FM_SLIGHTER_GRADE2_B_QTY_R",
            'R255_FM_SLI_G3_B_QTY_R': "R255_FM_SLIGHTER_GRADE3_B_QTY_R",
            'R255_FM_SLI_G1_B_MIN_DIST_R': "R255_FM_SLIGHTER_GRADE1_B_MIN_DISTANCE_R",
            'R255_FM_SLI_G2_B_MIN_DIST_R': "R255_FM_SLIGHTER_GRADE2_B_MIN_DISTANCE_R",
            'R255_FM_SLI_G3_B_MIN_DIST_R': "R255_FM_SLIGHTER_GRADE3_B_MIN_DISTANCE_R",
            'R255_FM_DARKER_G1_C_QTY_R': "R255_FM_DARKER_GRADE1_C_QTY_R",
            'R255_FM_DARKER_G2_C_QTY_R': "R255_FM_DARKER_GRADE2_C_QTY_R",
            'R255_FM_DARKER_G1_C_MIN_DIST_R': "R255_FM_DARKER_GRADE1_C_MIN_DISTANCE_R",
            'R255_FM_DARKER_G2_C_MIN_DIST_R': "R255_FM_DARKER_GRADE2_C_MIN_DISTANCE_R",
            'R255_FM_SLI_G1_C_QTY_R': "R255_FM_SLIGHTER_GRADE1_C_QTY_R",
            'R255_FM_SLI_G2_C_QTY_R': "R255_FM_SLIGHTER_GRADE2_C_QTY_R",
            'R255_FM_SLI_G3_C_QTY_R': "R255_FM_SLIGHTER_GRADE3_C_QTY_R",
            'R255_FM_SLI_G1_C_MIN_DIST_R': "R255_FM_SLIGHTER_GRADE1_C_MIN_DISTANCE_R",
            'R255_FM_SLI_G2_C_MIN_DIST_R': "R255_FM_SLIGHTER_GRADE2_C_MIN_DISTANCE_R",
            'R255_FM_SLI_G3_C_MIN_DIST_R': "R255_FM_SLIGHTER_GRADE3_C_MIN_DISTANCE_R",
            'R255_FM_DARKER_GRADE1_R': "R255_FM_DARKER_GRADE1_R",
            'R255_FM_DARKER_GRADE2_R': "R255_FM_DARKER_GRADE2_R",
            'R255_FM_SLIGHTER_GRADE1_R': "R255_FM_SLIGHTER_GRADE1_R",
            'R255_FM_SLIGHTER_GRADE2_R': "R255_FM_SLIGHTER_GRADE2_R",
            'R255_FM_SLIGHTER_GRADE3_R': "R255_FM_SLIGHTER_GRADE3_R",
            'G255_FM_DARKER_G1_A_QTY_R': "G255_FM_DARKER_GRADE1_A_QTY_R",
            'G255_FM_DARKER_G2_A_QTY_R': "G255_FM_DARKER_GRADE2_A_QTY_R",
            'G255_FM_DARKER_G1_A_MIN_DIST_R': "G255_FM_DARKER_GRADE1_A_MIN_DISTANCE_R",
            'G255_FM_DARKER_G2_A_MIN_DIST_R': "G255_FM_DARKER_GRADE2_A_MIN_DISTANCE_R",
            'G255_FM_SLI_G1_A_QTY_R': "G255_FM_SLIGHTER_GRADE1_A_QTY_R",
            'G255_FM_SLI_G2_A_QTY_R': "G255_FM_SLIGHTER_GRADE2_A_QTY_R",
            'G255_FM_SLI_G3_A_QTY_R': "G255_FM_SLIGHTER_GRADE3_A_QTY_R",
            'G255_FM_SLI_G1_A_MIN_DIST_R': "G255_FM_SLIGHTER_GRADE1_A_MIN_DISTANCE_R",
            'G255_FM_SLI_G2_A_MIN_DIST_R': "G255_FM_SLIGHTER_GRADE2_A_MIN_DISTANCE_R",
            'G255_FM_SLI_G3_A_MIN_DIST_R': "G255_FM_SLIGHTER_GRADE3_A_MIN_DISTANCE_R",
            'G255_FM_DARKER_G1_B_QTY_R': "G255_FM_DARKER_GRADE1_B_QTY_R",
            'G255_FM_DARKER_G2_B_QTY_R': "G255_FM_DARKER_GRADE2_B_QTY_R",
            'G255_FM_DARKER_G1_B_MIN_DISTR': "G255_FM_DARKER_GRADE1_B_MIN_DISTANCE_R",
            'G255_FM_DARKER_G2_B_MIN_DISTR': "G255_FM_DARKER_GRADE2_B_MIN_DISTANCE_R",
            'G255_FM_SLI_G1_B_QTY_R': "G255_FM_SLIGHTER_GRADE1_B_QTY_R",
            'G255_FM_SLI_G2_B_QTY_R': "G255_FM_SLIGHTER_GRADE2_B_QTY_R",
            'G255_FM_SLI_G3_B_QTY_R': "G255_FM_SLIGHTER_GRADE3_B_QTY_R",
            'G255_FM_SLI_G1_B_MIN_DIST_R': "G255_FM_SLIGHTER_GRADE1_B_MIN_DISTANCE_R",
            'G255_FM_SLI_G2_B_MIN_DIST_R': "G255_FM_SLIGHTER_GRADE2_B_MIN_DISTANCE_R",
            'G255_FM_SLI_G3_B_MIN_DIST_R': "G255_FM_SLIGHTER_GRADE3_B_MIN_DISTANCE_R",
            'G255_FM_DARKER_G1_C_QTY_R': "G255_FM_DARKER_GRADE1_C_QTY_R",
            'G255_FM_DARKER_G2_C_QTY_R': "G255_FM_DARKER_GRADE2_C_QTY_R",
            'G255_FM_DARKER_G1_C_MIN_DIST_R': "G255_FM_DARKER_GRADE1_C_MIN_DISTANCE_R",
            'G255_FM_DARKER_G2_C_MIN_DIST_R': "G255_FM_DARKER_GRADE2_C_MIN_DISTANCE_R",
            'G255_FM_SLI_G1_C_QTY_R': "G255_FM_SLIGHTER_GRADE1_C_QTY_R",
            'G255_FM_SLI_G2_C_QTY_R': "G255_FM_SLIGHTER_GRADE2_C_QTY_R",
            'G255_FM_SLI_G3_C_QTY_R': "G255_FM_SLIGHTER_GRADE3_C_QTY_R",
            'G255_FM_SLI_G1_C_MIN_DIST_R': "G255_FM_SLIGHTER_GRADE1_C_MIN_DISTANCE_R",
            'G255_FM_SLI_G2_C_MIN_DIST_R': "G255_FM_SLIGHTER_GRADE2_C_MIN_DISTANCE_R",
            'G255_FM_SLI_G3_C_MIN_DIST_R': "G255_FM_SLIGHTER_GRADE3_C_MIN_DISTANCE_R",
            'G255_FM_DARKER_GRADE1_R': "G255_FM_DARKER_GRADE1_R",
            'G255_FM_DARKER_GRADE2_R': "G255_FM_DARKER_GRADE2_R",
            'G255_FM_SLIGHTER_GRADE1_R': "G255_FM_SLIGHTER_GRADE1_R",
            'G255_FM_SLIGHTER_GRADE2_R': "G255_FM_SLIGHTER_GRADE2_R",
            'G255_FM_SLIGHTER_GRADE3_R': "G255_FM_SLIGHTER_GRADE3_R",
            'B255_FM_DARKER_G1_A_QTY_R': "B255_FM_DARKER_GRADE1_A_QTY_R",
            'B255_FM_DARKER_G2_A_QTY_R': "B255_FM_DARKER_GRADE2_A_QTY_R",
            'B255_FM_DARKER_G1_A_MIN_DIST_R': "B255_FM_DARKER_GRADE1_A_MIN_DISTANCE_R",
            'B255_FM_DARKER_G2_A_MIN_DIST_R': "B255_FM_DARKER_GRADE2_A_MIN_DISTANCE_R",
            'B255_FM_SLI_G1_A_QTY_R': "B255_FM_SLIGHTER_GRADE1_A_QTY_R",
            'B255_FM_SLI_G2_A_QTY_R': "B255_FM_SLIGHTER_GRADE2_A_QTY_R",
            'B255_FM_SLI_G3_A_QTY_R': "B255_FM_SLIGHTER_GRADE3_A_QTY_R",
            'B255_FM_SLI_G1_A_MIN_DIST_R': "B255_FM_SLIGHTER_GRADE1_A_MIN_DISTANCE_R",
            'B255_FM_SLI_G2_A_MIN_DIST_R': "B255_FM_SLIGHTER_GRADE2_A_MIN_DISTANCE_R",
            'B255_FM_SLI_G3_A_MIN_DIST_R': "B255_FM_SLIGHTER_GRADE3_A_MIN_DISTANCE_R",
            'B255_FM_DARKER_G1_B_QTY_R': "B255_FM_DARKER_GRADE1_B_QTY_R",
            'B255_FM_DARKER_G2_B_QTY_R': "B255_FM_DARKER_GRADE2_B_QTY_R",
            'B255_FM_DARKER_G1_B_MIN_DIST_R': "B255_FM_DARKER_GRADE1_B_MIN_DISTANCE_R",
            'B255_FM_DARKER_G2_B_MIN_DIST_R': "B255_FM_DARKER_GRADE2_B_MIN_DISTANCE_R",
            'B255_FM_SLI_G1_B_QTY_R': "B255_FM_SLIGHTER_GRADE1_B_QTY_R",
            'B255_FM_SLI_G2_B_QTY_R': "B255_FM_SLIGHTER_GRADE2_B_QTY_R",
            'B255_FM_SLI_G3_B_QTY_R': "B255_FM_SLIGHTER_GRADE3_B_QTY_R",
            'B255_FM_SLI_G1_B_MIN_DIST_R': "B255_FM_SLIGHTER_GRADE1_B_MIN_DISTANCE_R",
            'B255_FM_SLI_G2_B_MIN_DIST_R': "B255_FM_SLIGHTER_GRADE2_B_MIN_DISTANCE_R",
            'B255_FM_SLI_G3_B_MIN_DIST_R': "B255_FM_SLIGHTER_GRADE3_B_MIN_DISTANCE_R",
            'B255_FM_DARKER_G1_C_QTY_R': "B255_FM_DARKER_GRADE1_C_QTY_R",
            'B255_FM_DARKER_G2_C_QTY_R': "B255_FM_DARKER_GRADE2_C_QTY_R",
            'B255_FM_DARKER_G1_C_MIN_DIST_R': "B255_FM_DARKER_GRADE1_C_MIN_DISTANCE_R",
            'B255_FM_DARKER_G2_C_MIN_DIST_R': "B255_FM_DARKER_GRADE2_C_MIN_DISTANCE_R",
            'B255_FM_SLI_G1_C_QTY_R': "B255_FM_SLIGHTER_GRADE1_C_QTY_R",
            'B255_FM_SLI_G2_C_QTY_R': "B255_FM_SLIGHTER_GRADE2_C_QTY_R",
            'B255_FM_SLI_G3_C_QTY_R': "B255_FM_SLIGHTER_GRADE3_C_QTY_R",
            'B255_FM_SLI_G1_C_MIN_DIST_R': "B255_FM_SLIGHTER_GRADE1_C_MIN_DISTANCE_R",
            'B255_FM_SLI_G2_C_MIN_DIST_R': "B255_FM_SLIGHTER_GRADE2_C_MIN_DISTANCE_R",
            'B255_FM_SLI_G3_C_MIN_DIST_R': "B255_FM_SLIGHTER_GRADE3_C_MIN_DISTANCE_R",
            'B255_FM_DARKER_GRADE1_R': "B255_FM_DARKER_GRADE1_R",
            'B255_FM_DARKER_GRADE2_R': "B255_FM_DARKER_GRADE2_R",
            'B255_FM_SLIGHTER_GRADE1_R': "B255_FM_SLIGHTER_GRADE1_R",
            'B255_FM_SLIGHTER_GRADE2_R': "B255_FM_SLIGHTER_GRADE2_R",
            'B255_FM_SLIGHTER_GRADE3_R': "B255_FM_SLIGHTER_GRADE3_R",
            'W000_BRIGHT_G1_A_QTY_R': "W000_BRIGHT_GRADE1_A_QTY_R",
            'W000_BRIGHT_G2_A_QTY_R': "W000_BRIGHT_GRADE2_A_QTY_R",
            'W000_BRIGHT_G3_A_QTY_R': "W000_BRIGHT_GRADE3_A_QTY_R",
            'W000_BRIGHT_G4_A_QTY_R': "W000_BRIGHT_GRADE4_A_QTY_R",
            'W000_BRIGHT_G1_A_MIN_DIST_R': "W000_BRIGHT_GRADE1_A_MIN_DISTANCE_R",
            'W000_BRIGHT_G2_A_MIN_DIST_R': "W000_BRIGHT_GRADE2_A_MIN_DISTANCE_R",
            'W000_BRIGHT_G3_A_MIN_DIST_R': "W000_BRIGHT_GRADE3_A_MIN_DISTANCE_R",
            'W000_BRIGHT_G4_A_MIN_DIST_R': "W000_BRIGHT_GRADE4_A_MIN_DISTANCE_R",
            'W000_BRIGHT_G1_B_QTY_R': "W000_BRIGHT_GRADE1_B_QTY_R",
            'W000_BRIGHT_G2_B_QTY_R': "W000_BRIGHT_GRADE2_B_QTY_R",
            'W000_BRIGHT_G3_B_QTY_R': "W000_BRIGHT_GRADE3_B_QTY_R",
            'W000_BRIGHT_G4_B_QTY_R': "W000_BRIGHT_GRADE4_B_QTY_R",
            'W000_BRIGHT_G1_B_MIN_DIST_R': "W000_BRIGHT_GRADE1_B_MIN_DISTANCE_R",
            'W000_BRIGHT_G2_B_MIN_DIST_R': "W000_BRIGHT_GRADE2_B_MIN_DISTANCE_R",
            'W000_BRIGHT_G3_B_MIN_DIST_R': "W000_BRIGHT_GRADE3_B_MIN_DISTANCE_R",
            'W000_BRIGHT_G4_B_MIN_DIST_R': "W000_BRIGHT_GRADE4_B_MIN_DISTANCE_R",
            'W000_BRIGHT_G1_C_QTY_R': "W000_BRIGHT_GRADE1_C_QTY_R",
            'W000_BRIGHT_G2_C_QTY_R': "W000_BRIGHT_GRADE2_C_QTY_R",
            'W000_BRIGHT_G3_C_QTY_R': "W000_BRIGHT_GRADE3_C_QTY_R",
            'W000_BRIGHT_G4_C_QTY_R': "W000_BRIGHT_GRADE4_C_QTY_R",
            'W000_BRIGHT_G1_C_MIN_DIST_R': "W000_BRIGHT_GRADE1_C_MIN_DISTANCE_R",
            'W000_BRIGHT_G2_C_MIN_DIST_R': "W000_BRIGHT_GRADE2_C_MIN_DISTANCE_R",
            'W000_BRIGHT_G3_C_MIN_DIST_R': "W000_BRIGHT_GRADE3_C_MIN_DISTANCE_R",
            'W000_BRIGHT_G4_C_MIN_DIST_R': "W000_BRIGHT_GRADE4_C_MIN_DISTANCE_R",
            'W000_BRIGHT_GRADE1_R': "W000_BRIGHT_GRADE1_R",
            'W000_BRIGHT_GRADE2_R': "W000_BRIGHT_GRADE2_R",
            'W000_BRIGHT_GRADE3_R': "W000_BRIGHT_GRADE3_R",
            'W000_BRIGHT_GRADE4_R': "W000_BRIGHT_GRADE4_R",
            'W255_BRIGHT_A_QTY_R': "W255_BRIGHT_A_QTY_R",
            'W255_BRIGHT_A_MIN_DISTANCE_R': "W255_BRIGHT_A_MIN_DISTANCE_R",
            'W255_BRIGHT_B_QTY_R': "W255_BRIGHT_B_QTY_R",
            'W255_BRIGHT_B_MIN_DISTANCE_R': "W255_BRIGHT_B_MIN_DISTANCE_R",
            'W255_BRIGHT_C_QTY_R': "W255_BRIGHT_C_QTY_R",
            'W255_BRIGHT_C_MIN_DISTANCE_R': "W255_BRIGHT_C_MIN_DISTANCE_R",
            'W255_BRIGHT_R': "W255_BRIGHT_R",
            'R255_BRIGHT_A_QTY_R': "R255_BRIGHT_A_QTY_R",
            'R255_BRIGHT_A_MIN_DISTANCE_R': "R255_BRIGHT_A_MIN_DISTANCE_R",
            'R255_BRIGHT_B_QTY_R': "R255_BRIGHT_B_QTY_R",
            'R255_BRIGHT_B_MIN_DISTANCE_R': "R255_BRIGHT_B_MIN_DISTANCE_R",
            'R255_BRIGHT_C_QTY_R': "R255_BRIGHT_C_QTY_R",
            'R255_BRIGHT_C_MIN_DISTANCE_R': "R255_BRIGHT_C_MIN_DISTANCE_R",
            'R255_BRIGHT_R': "R255_BRIGHT_R",
            'G255_BRIGHT_A_QTY_R': "G255_BRIGHT_A_QTY_R",
            'G255_BRIGHT_A_MIN_DISTANCE_R': "G255_BRIGHT_A_MIN_DISTANCE_R",
            'G255_BRIGHT_B_QTY_R': "G255_BRIGHT_B_QTY_R",
            'G255_BRIGHT_B_MIN_DISTANCE_R': "G255_BRIGHT_B_MIN_DISTANCE_R",
            'G255_BRIGHT_C_QTY_R': "G255_BRIGHT_C_QTY_R",
            'G255_BRIGHT_C_MIN_DISTANCE_R': "G255_BRIGHT_C_MIN_DISTANCE_R",
            'G255_BRIGHT_R': "G255_BRIGHT_R",
            'B255_BRIGHT_A_QTY_R': "B255_BRIGHT_A_QTY_R",
            'B255_BRIGHT_A_MIN_DISTANCE_R': "B255_BRIGHT_A_MIN_DISTANCE_R",
            'B255_BRIGHT_B_QTY_R': "B255_BRIGHT_B_QTY_R",
            'B255_BRIGHT_B_MIN_DISTANCE_R': "B255_BRIGHT_B_MIN_DISTANCE_R",
            'B255_BRIGHT_C_QTY_R': "B255_BRIGHT_C_QTY_R",
            'B255_BRIGHT_C_MIN_DISTANCE_R': "B255_BRIGHT_C_MIN_DISTANCE_R",
            'B255_BRIGHT_R': "B255_BRIGHT_R",
            'BLEMISH_RES_R': "BLEMISH_RES_R",
            'GL180_P1_X': "GL180_P1_x",
            'GL180_P1_Y': "GL180_P1_y",
            'GL180_P1_LV': "GL180_P1_Lv",
            'GL127_P1_X': "GL127_P1_x",
            'GL127_P1_Y': "GL127_P1_y",
            'GL127_P1_LV': "GL127_P1_Lv",
            'GL90_P1_X': "GL90_P1_x",
            'GL90_P1_Y': "GL90_P1_y",
            'GL90_P1_LV': "GL90_P1_Lv",
            'W000_P1_X': "W000_P1_x",
            'W000_P1_Y': "W000_P1_y",
            'W000_P1_LV': "W000_P1_Lv",
            'W127_P1_X': "W127_P1_x",
            'W127_P1_Y': "W127_P1_y",
            'W127_P1_LV': "W127_P1_Lv",
            'GL64_P1_X': "GL64_P1_x",
            'GL64_P1_Y': "GL64_P1_y",
            'GL64_P1_LV': "GL64_P1_Lv",
            'GL35_P1_X': "GL35_P1_x",
            'GL35_P1_Y': "GL35_P1_y",
            'GL35_P1_LV': "GL35_P1_Lv",
            'GL25_P1_X': "GL25_P1_x",
            'GL25_P1_Y': "GL25_P1_y",
            'GL25_P1_LV': "GL25_P1_Lv",
            'GL12_P1_X': "GL12_P1_x",
            'GL12_P1_Y': "GL12_P1_y",
            'GL12_P1_LV': "GL12_P1_Lv",
            'GREEN36_P1_X': "Green36_P1_x",
            'GREEN36_P1_Y': "Green36_P1_y",
            'GREEN36_P1_LV': "Green36_P1_Lv",
            'GREEN84_P1_X': "Green84_P1_x",
            'GREEN84_P1_Y': "Green84_P1_y",
            'GREEN84_P1_LV': "Green84_P1_Lv",
            'GREEN100_P1_X': "Green100_P1_x",
            'GREEN100_P1_Y': "Green100_P1_y",
            'GREEN100_P1_LV': "Green100_P1_Lv",
            'W255_P2_X': "W255_P2_x",
            'W255_P2_Y': "W255_P2_y",
            'W255_P2_LV': "W255_P2_Lv",
            'R255_P2_X': "R255_P2_x",
            'R255_P2_Y': "R255_P2_y",
            'R255_P2_LV': "R255_P2_Lv",
            'G255_P2_X': "G255_P2_x",
            'G255_P2_Y': "G255_P2_y",
            'G255_P2_LV': "G255_P2_Lv",
            'B255_P2_X': "B255_P2_x",
            'B255_P2_Y': "B255_P2_y",
            'B255_P2_LV': "B255_P2_Lv",
            'W255_P3_X': "W255_P3_x",
            'W255_P3_Y': "W255_P3_y",
            'W255_P3_LV': "W255_P3_Lv",
            'R255_P3_X': "R255_P3_x",
            'R255_P3_Y': "R255_P3_y",
            'R255_P3_LV': "R255_P3_Lv",
            'G255_P3_X': "G255_P3_x",
            'G255_P3_Y': "G255_P3_y",
            'G255_P3_LV': "G255_P3_Lv",
            'B255_P3_X': "B255_P3_x",
            'B255_P3_Y': "B255_P3_y",
            'B255_P3_LV': "B255_P3_Lv",
            'W255_P4_X': "W255_P4_x",
            'W255_P4_Y': "W255_P4_y",
            'W255_P4_LV': "W255_P4_Lv",
            'R255_P4_X': "R255_P4_x",
            'R255_P4_Y': "R255_P4_y",
            'R255_P4_LV': "R255_P4_Lv",
            'G255_P4_X': "G255_P4_x",
            'G255_P4_Y': "G255_P4_y",
            'G255_P4_LV': "G255_P4_Lv",
            'B255_P4_X': "B255_P4_x",
            'B255_P4_Y': "B255_P4_y",
            'B255_P4_LV': "B255_P4_Lv",
            'W255_P5_X': "W255_P5_x",
            'W255_P5_Y': "W255_P5_y",
            'W255_P5_LV': "W255_P5_Lv",
            'R255_P5_X': "R255_P5_x",
            'R255_P5_Y': "R255_P5_y",
            'R255_P5_LV': "R255_P5_Lv",
            'G255_P5_X': "G255_P5_x",
            'G255_P5_Y': "G255_P5_y",
            'G255_P5_LV': "G255_P5_Lv",
            'B255_P5_X': "B255_P5_x",
            'B255_P5_Y': "B255_P5_y",
            'B255_P5_LV': "B255_P5_Lv",
            'W255_P6_X': "W255_P6_x",
            'W255_P6_Y': "W255_P6_y",
            'W255_P6_LV': "W255_P6_Lv",
            'R255_P6_X': "R255_P6_x",
            'R255_P6_Y': "R255_P6_y",
            'R255_P6_LV': "R255_P6_Lv",
            'G255_P6_X': "G255_P6_x",
            'G255_P6_Y': "G255_P6_y",
            'G255_P6_LV': "G255_P6_Lv",
            'B255_P6_X': "B255_P6_x",
            'B255_P6_Y': "B255_P6_y",
            'B255_P6_LV': "B255_P6_Lv",
            'W255_P7_X': "W255_P7_x",
            'W255_P7_Y': "W255_P7_y",
            'W255_P7_LV': "W255_P7_Lv",
            'R255_P7_X': "R255_P7_x",
            'R255_P7_Y': "R255_P7_y",
            'R255_P7_LV': "R255_P7_Lv",
            'G255_P7_X': "G255_P7_x",
            'G255_P7_Y': "G255_P7_y",
            'G255_P7_LV': "G255_P7_Lv",
            'B255_P7_X': "B255_P7_x",
            'B255_P7_Y': "B255_P7_y",
            'B255_P7_LV': "B255_P7_Lv",
            'W255_P8_X': "W255_P8_x",
            'W255_P8_Y': "W255_P8_y",
            'W255_P8_LV': "W255_P8_Lv",
            'R255_P8_X': "R255_P8_x",
            'R255_P8_Y': "R255_P8_y",
            'R255_P8_LV': "R255_P8_Lv",
            'G255_P8_X': "G255_P8_x",
            'G255_P8_Y': "G255_P8_y",
            'G255_P8_LV': "G255_P8_Lv",
            'B255_P8_X': "B255_P8_x",
            'B255_P8_Y': "B255_P8_y",
            'B255_P8_LV': "B255_P8_Lv",
            'W255_P9_X': "W255_P9_x",
            'W255_P9_Y': "W255_P9_y",
            'W255_P9_LV': "W255_P9_Lv",
            'R255_P9_X': "R255_P9_x",
            'R255_P9_Y': "R255_P9_y",
            'R255_P9_LV': "R255_P9_Lv",
            'G255_P9_X': "G255_P9_x",
            'G255_P9_Y': "G255_P9_y",
            'G255_P9_LV': "G255_P9_Lv",
            'B255_P9_X': "B255_P9_x",
            'B255_P9_Y': "B255_P9_y",
            'B255_P9_LV': "B255_P9_Lv",
            'W000_RAW_BLEMISH_INFO_X': "W000_Raw_Blemish_Info_X",
            'W000_RAW_BLEMISH_INFO_Y': "W000_Raw_Blemish_Info_Y",
            'W000_RAW_BLEMISH_INFO_SIZE': "W000_Raw_Blemish_Info_Size",
            'W000_RAW_BLEMISH_INFO_PIXEL': "W000_Raw_Blemish_Info_Pixel",
            'W000_RAW_BLEMISH_INFO_CONTRAST': "W000_Raw_Blemish_Info_Contrast",
            'W000_RAW_BLEMISH_INFO_LV': "W000_Raw_Blemish_Info_Lv",
            'W255_RAW_BLEMISH_INFO_X': "W255_Raw_Blemish_Info_X",
            'W255_RAW_BLEMISH_INFO_Y': "W255_Raw_Blemish_Info_Y",
            'W255_RAW_BLEMISH_INFO_SIZE': "W255_Raw_Blemish_Info_Size",
            'W255_RAW_BLEMISH_INFO_PIXEL': "W255_Raw_Blemish_Info_Pixel",
            'W255_RAW_BLEMISH_INFO_CONTRAST': "W255_Raw_Blemish_Info_Contrast",
            'W255_RAW_BLEMISH_INFO_LV': "W255_Raw_Blemish_Info_Lv",
            'R255_RAW_BLEMISH_INFO_X': "R255_Raw_Blemish_Info_X",
            'R255_RAW_BLEMISH_INFO_Y': "R255_Raw_Blemish_Info_Y",
            'R255_RAW_BLEMISH_INFO_SIZE': "R255_Raw_Blemish_Info_Size",
            'R255_RAW_BLEMISH_INFO_PIXEL': "R255_Raw_Blemish_Info_Pixel",
            'R255_RAW_BLEMISH_INFO_CONTRAST': "R255_Raw_Blemish_Info_Contrast",
            'R255_RAW_BLEMISH_INFO_LV': "R255_Raw_Blemish_Info_Lv",
            'G255_RAW_BLEMISH_INFO_X': "G255_Raw_Blemish_Info_X",
            'G255_RAW_BLEMISH_INFO_Y': "G255_Raw_Blemish_Info_Y",
            'G255_RAW_BLEMISH_INFO_SIZE': "G255_Raw_Blemish_Info_Size",
            'G255_RAW_BLEMISH_INFO_PIXEL': "G255_Raw_Blemish_Info_Pixel",
            'G255_RAW_BLEMISH_INFO_CONTRAST': "G255_Raw_Blemish_Info_Contrast",
            'G255_RAW_BLEMISH_INFO_LV': "G255_Raw_Blemish_Info_Lv",
            'B255_RAW_BLEMISH_INFO_X': "B255_Raw_Blemish_Info_X",
            'B255_RAW_BLEMISH_INFO_Y': "B255_Raw_Blemish_Info_Y",
            'B255_RAW_BLEMISH_INFO_SIZE': "B255_Raw_Blemish_Info_Size",
            'B255_RAW_BLEMISH_INFO_PIXEL': "B255_Raw_Blemish_Info_Pixel",
            'B255_RAW_BLEMISH_INFO_CONTRAST': "B255_Raw_Blemish_Info_Contrast",
            'B255_RAW_BLEMISH_INFO_LV': "B255_Raw_Blemish_Info_Lv",

        }
        # </editor-fold>

    def save_results(self, uut_sn, log_items):
        """
        Save Relevant Results from the Test Log to the Shop Floor System
        """
        args = []
        err_codes = []
        log_2_mes = {}
        sub_test_res = []
        for k in self._mes_dic.keys():
            log_2_mes[k] = None
        for log_item in log_items[1:]:
            idx, name, value, lsl, usl, timestamp, res, err_code = tuple(log_item)
            for it in [k for k, d in self._mes_dic.items() if d == name]:
                log_2_mes[it] = value
                if (res in ['FAIL', None]) and int(idx) > 0:
                    err_codes.append(idx)
                    sub_test_res.append(res)
        if None in sub_test_res:
            err_codes = [99999]  # to indicate the test-flow is not executed completely

        # 日期格式转换-用于数据上传
        log_2_mes['START_TIME'] = datetime.datetime.strptime(log_2_mes['START_TIME'], '%Y%m%d-%H%M%S')
        log_2_mes['END_TIME'] = datetime.datetime.strptime(log_2_mes['END_TIME'], '%Y%m%d-%H%M%S')

        log_2_mes['MODEL_NAME'] = self._machine_type
        log_2_mes['OVERALL_ERRORCODE'] = ';'.join(err_codes)
        insert_response = self.lcd_avi_myzy_log_loader(log_2_mes)
        return insert_response

    # <editor-fold desc="API interface provided by Genius Inc.">
    def p5385_in_lot_info(self, uut_sn):
        count = 0
        success = False
        res = None
        while count < self._max_retries and (not success):
            try:
                client = suds.client.Client(SF_URL, timeout=self._time_out)
                res = client.service.GetInLotInfo(self._machine_type, uut_sn, '', '', '')
                if hasattr(res, 'STATUS') and (res.STATUS == 'SUCCESS'):
                    success = True
            except Exception as e:
                logging.error(f'Fail to call P5385_in_lot. Ex: {str(e)}')
            count += 1
        logging.info(f'Inlot: {count}, success: {success} <= {res}')
        return res

    def lcd_avi_myzy_log_loader(self, lcd_avi_data):
        count = 0
        success = False
        res = None
        while count < self._max_retries and (not success):
            try:
                client = suds.client.Client(SF_LOADER_URL, timeout=self._time_out)
                res = client.service.Bluni_Overall_LOG_Loader(lcd_avi_data)
                if res is not None:
                    success = True
            except Exception as e:
                logging.error(f'Fail to call lcd_avi_myzy_log_loader. Ex:{str(e)}')
            count += 1
        logging.info(f'lcd_avi: {count}, success: {success}')
        return res

    def gseo_mail_ws(self, subject, content):
        mail_vm = {}
        mail_vm['TO'] = ','.join(MES_RECV_MAIL_LIST)  # 多人時, 用逗號分開
        mail_vm['CC'] = ','.join(MES_CC_MAIL_LIST)  # 無CC, 可給空白
        mail_vm['SUBJECT'] = subject  # 格式: [Exception Notice]-[@站點名稱]：yyyy-MM-dd HH:mm:ss
        mail_vm['CONTENT'] = content
        mail_vm['FILE_NAME'] = None
        mail_vm['FILE_BYTE'] = None
        count = 0
        success = False
        res = None
        while count < self._max_retries and (not success):
            try:
                client = suds.client.Client(SF_MAIL_URL, timeout=10)
                res = client.service.SendMail(mail_vm)
            except Exception as e:
                logging.error(f'Fail to call sendMail. retries = {count+1}, Ex: {str(e)}')
            count += 1
        return res
    # </editor-fold>


def daemon_upload(*add):
    logging.info('Start daemon thread for upload.')
    ind = 0
    is_sent_mail_when_fail = True
    min_time_interval = 3 * 60
    loop_interval_seconds = 30

    current_process_id = None
    exist_pids = psutil.pids()
    for c in exist_pids:
        if psutil.pid_exists(c) and psutil.Process(c).name() == HostProgressName:
            current_process_id = c
            break

    while current_process_id is not None and psutil.pid_exists(current_process_id):
        file_to_upload = None
        if os.path.exists(SHOP_FLOOR_BAK_DIR):
            fns = sorted(glob.glob(os.path.join(SHOP_FLOOR_BAK_DIR, SHOP_FLOOR_BAK_DIR_FILTER))
                         , key=os.path.getmtime)
            if len(fns) == 0:
                is_sent_mail_when_fail = True
            if len(fns) > 0 and (abs(os.path.getmtime(fns[0]) - time.time()) > min_time_interval):
                file_to_upload = fns[0]
        if ((file_to_upload is not None)
                and os.path.exists(file_to_upload)
                and (not MES_CHK_OFFLINE.get('mes_chk_offline'))):
            print(f'try to pick up logs -- {ind} ...==> 1/{len(fns)} \n')
            try:
                save_results_from_logs_res = save_results_from_logs(file_to_upload)
                if save_results_from_logs_res[0]:
                    is_sent_mail_when_fail = True
                    loop_interval_seconds = 1
                    logging.debug(f'Success to upload to Mes : {os.path.basename(file_to_upload)}')
                    os.remove(file_to_upload)
                else:
                    if save_results_from_logs_res[1] is not None:
                        os.remove(file_to_upload)
                    elif is_sent_mail_when_fail and MES_IT_MAIL_NOTIFICATION:  # 网络反馈为None，判定为网络异常
                        message_text = f'{MACHINE_TYPE}: {STATION_ID} FAIL TO SEND LOGS TO MES.'
                        # [Exception Notice] - [ @ 站點名稱]：yyyy - MM - dd HH: mm:ss
                        dt = datetime.datetime.now()
                        subject_msg = f'[專案代號:5385][Exception Notice] - [{MACHINE_TYPE}]:{dt:%Y-%m-%d}'
                        print(f'Try to send mail {subject_msg}')
                        res = _ex_shop_floor.gseo_mail_ws(subject_msg, message_text)
                        if res == 'SUCCESS':
                            is_sent_mail_when_fail = False
                            loop_interval_seconds = 20
                        else:
                            logging.error(f'Fail to send mail. {res}')
            except Exception as e:
                logging.error(f'Fail to upload data {MES_RECV_MAIL_LIST}, err: {str(e)}')
        ind += 1
        time.sleep(loop_interval_seconds)
    logging.info('stop daemon thread for upload.')


def ok_to_test(serial):
    if (not MES_IN_LOT_CTRL) or MES_CHK_OFFLINE.get('mes_chk_offline'):
        ok_to_test_res = True
    else:
        ok_to_test_res = False
        try:
            validate_res = _ex_shop_floor.p5385_in_lot_info(serial)
            if hasattr(validate_res, 'STATUS'):
                inspection = None
                if validate_res.STATUS.upper() == 'SUCCESS':
                    inspection = validate_res.INSPECTION_RESULT
                    if validate_res.INSPECTION_RESULT in ['OK', 'WAIVER']:
                        ok_to_test_res = True
                msg = '过站检测失败 站点状态: {0}, 前站结果: {1}'.format(validate_res.STATUS, inspection)
            else:
                msg = '过站检测失败 网络异常'
            if not ok_to_test_res:
                tkinter.simpledialog.messagebox.showinfo('提示', msg)

        except Exception as e:
            logging.error('ok to test exp: {0}'.format(str(e)))
            # 连接不成功， 则调整到是否切换离线模式
            dialog_title = '连接服务器失败'
            root = tk.Tk()
            root.withdraw()
            input_pwd = tkinter.simpledialog.askstring(dialog_title, '如需转入离线模式，请输入密码: ', show='*')
            if (input_pwd is not None) and (input_pwd.upper() == MES_CTRL_PWD):
                MES_CHK_OFFLINE['mes_chk_offline'] = True
            elif input_pwd is not None:
                tkinter.simpledialog.messagebox.showinfo(dialog_title, '密码输入错误')

    return ok_to_test_res


def save_results(test_log):
    """

    :type test_log: hardware_station_common.test_station.test_log.TestRecord
    """
    res = False
    try:
        res = save_results_from_logs(test_log.get_file_path(), log_upload_after_test=True)[0]
    except Exception as e:
        logging.error(f'Exception --> {str(e)}')
    return res


def save_results_from_logs(log_file_path, log_upload_after_test=False):
    web_res_msg = None
    save_result_res = False

    with open(log_file_path) as file:
        contents = file.readlines()

    log_items = [c.splitlines(keepends=False)[0].split(', ') for c in contents]
    uut_sn = [c[2] for c in log_items if c[1] == 'UUT_Serial_Number'][0]
    overall_result = [c[2] for c in log_items if c[1] == 'Overall_Result'][0]
    overall_errcode = [c[2] for c in log_items if c[1] == 'Overall_ErrorCode'][0]

    logging.info('测试结果上传MES 系统 >>>>>>>>>>>>>>>>>>>>>>>>>>> {0}, ErrCode = {1}'
                 .format(uut_sn, overall_errcode))
    try:
        if not os.path.exists(SHOP_FLOOR_BAK_DIR):
            os.makedirs(SHOP_FLOOR_BAK_DIR)
            os.chmod(SHOP_FLOOR_BAK_DIR, 0o777)
        if not os.path.exists(SHOP_FLOOR_FAIL_TO_UPLOAD):
            os.makedirs(SHOP_FLOOR_FAIL_TO_UPLOAD)
            os.chmod(SHOP_FLOOR_FAIL_TO_UPLOAD, 0o777)

        if not MES_CHK_OFFLINE.get('mes_chk_offline'):
            web_res_msg = _ex_shop_floor.save_results(uut_sn, log_items)
            if web_res_msg == 'SUCCESS':
                logging.info('上传结果完成' + '=' * 30)
                save_result_res = True
            else:
                logging.info('上传测试结果失败 >>>>>>>>>>>>>>>>>>>>>>>>>>> ')
        else:  # 离线测试时，数据自动保存到临时文件夹，由后台线程负责统一执行数据上传
            bak_log_file_path = os.path.join(SHOP_FLOOR_BAK_DIR, os.path.basename(log_file_path))  # 网络异常时，数组转存
            if ((not os.path.exists(bak_log_file_path)) or
                    (not os.path.samefile(bak_log_file_path, log_file_path))):
                shutil.copyfile(log_file_path, bak_log_file_path)
            save_result_res = True
    except Exception as e:
        logging.error('ok to test exp: {0}'.format(str(e)))
    if not save_result_res:
        bak_log_file_path = os.path.join(SHOP_FLOOR_BAK_DIR, os.path.basename(log_file_path))  # 网络异常时，数组转存
        if web_res_msg is not None:  # 非网络异常时，数据转存
            bak_log_file_path = os.path.join(SHOP_FLOOR_FAIL_TO_UPLOAD, os.path.basename(log_file_path))
        if ((not os.path.exists(bak_log_file_path)) or
                (not os.path.samefile(bak_log_file_path, log_file_path))):
            shutil.copyfile(log_file_path, bak_log_file_path)
        msg = f'上传MES失败 ，数据转存至 {bak_log_file_path}'
        logging.info(f'{msg} --> {web_res_msg}')
        print(msg)
        if (not MES_CHK_OFFLINE.get('mes_chk_offline')) and log_upload_after_test:  # 在线上传时，如不成功，需要执行报警提示
            tkinter.simpledialog.messagebox.showinfo('提示', msg)

    logging.info('{0}***********************************{1}....\n'.format(uut_sn, log_file_path))
    return save_result_res, web_res_msg


logger = logging.getLogger()
if not logger.hasHandlers():
    LOG_FORMAT = "%(asctime)s - %(levelname)s - %(message)s"
    DATE_FORMAT = '%Y-%m-%d %H:%M:%S'
    log_fn = time.strftime('%Y_%m_%d', time.localtime(time.time()))

    formatter = logging.Formatter(LOG_FORMAT, DATE_FORMAT)
    chlr = logging.StreamHandler()
    chlr.setFormatter(logging.Formatter('%(levelname)s      %(message)s'))
    chlr.setLevel('INFO')
    fn = os.path.join(os.path.curdir, '../shop_floor_interface/logs',
                                      'sf_i_{0}_{1}_{2}.log'.format(MACHINE_TYPE, STATION_ID, log_fn))
    log_dir = os.path.dirname(fn)
    if not os.path.exists(log_dir):
        os.makedirs(log_dir)
        os.chmod(log_dir, 0o777)
    fhlr = logging.FileHandler(fn)
    fhlr.setFormatter(formatter)
    logger.setLevel('INFO')
    logger.addHandler(chlr)
    logger.addHandler(fhlr)

    _ex_shop_floor = ShopFloor_genius(MACHINE_TYPE, STATION_ID)  # type: ShopFloor_genius

    daemon_thr = threading.Thread(target=daemon_upload, args=())
    daemon_thr.setDaemon(True)
    daemon_thr.start()
    MES_CHK_OFFLINE = {}


if __name__ == '__main__':
    logging.info('----------------------------')
    logging.debug('+' * 20)
    log_dir = r'c:\oculus\factory_test_omi\factory_test_stations\factory-test_logs'
    fn_name = r''
    serial_numbers = ['2308L0208K02KW', '2308L0208K02M1', '2308L0208K02MR']
    for serial_number in serial_numbers:
        logging.info('----------------------------{0}'.format(serial_number))
        ok_to_test(serial_number)
